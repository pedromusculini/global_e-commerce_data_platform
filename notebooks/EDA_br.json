{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {"id": "#VSC-b6b84537", "language": "markdown"},
      "source": [
        "# Exploratory Data Analysis (EDA) - Brazilian E-commerce Data",
        " ",
        "This notebook analyzes the cleaned Brazilian e-commerce datasets for international comparison."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {"id": "#VSC-dd366031", "language": "python"},
      "source": [
        "# 1. Import Required Libraries",
        "import pandas as pd",
        "import numpy as np",
        "import matplotlib.pyplot as plt",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {"id": "#VSC-c6b9f597", "language": "markdown"},
      "source": [
        "## 2. Load Raw Brazilian Data",
        "Load the original Brazilian e-commerce CSV files for inspection."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {"id": "#VSC-79beb6a7", "language": "python"},
      "source": [
        "# Example: Load raw orders data",
        "raw_orders = pd.read_csv('../data/brazil/olist_orders_dataset.csv')",
        "print('Raw orders shape:', raw_orders.shape)",
        "raw_orders.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {"id": "#VSC-87d86563", "language": "markdown"},
      "source": [
        "## 3. Run Data Cleaning Script (clean_br.py)",
        "Use the separate cleaning script to process raw Brazilian data."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {"id": "#VSC-9a53e994", "language": "python"},
      "source": [
        "# Run cleaning script for Brazilian data",
        "import subprocess",
        "subprocess.run(['python', '../scripts/clean_br.py'])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {"id": "#VSC-55b12e03", "language": "markdown"},
      "source": [
        "## 4. Load Cleaned Brazilian Data",
        "Load the cleaned CSV files generated by the cleaning script."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {"id": "#VSC-c4159aa3", "language": "python"},
      "source": [
        "# Example: Load cleaned orders data",
        "orders_br = pd.read_csv('../data/processed/brazil/olist_orders_dataset_clean.csv')",
        "print('Cleaned orders shape:', orders_br.shape)",
        "orders_br.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {"id": "#VSC-9d39c7b6", "language": "markdown"},
      "source": [
        "## 5. Exploratory Data Analysis",
        "Perform exploratory analysis: missing values, data types, distributions, correlations."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {"id": "#VSC-3dc3f4d7", "language": "python"},
      "source": [
        "# Check for missing values and data types",
        "orders_br.info()",
        "orders_br.isnull().sum()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {"id": "#VSC-f7f31f37", "language": "markdown"},
      "source": [
        "## 6. Data Visualization",
        "Create charts and plots to visualize patterns and trends in Brazilian e-commerce data."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {"id": "#VSC-a3662b1b", "language": "python"},
      "source": [
        "# Example: Order status distribution",
        "fig, ax = plt.subplots()",
        "orders_br['order_status'].value_counts().plot(kind='bar', color='skyblue', ax=ax)",
        "plt.title('Order Status Distribution (Brazil)')",
        "plt.xlabel('Order Status')",
        "plt.ylabel('Count')",
        "plt.tight_layout()",
        "plt.show()",
        "fig.savefig('../results_png/order_status_br.png', dpi=300)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {"id": "#VSC-f7d1b74c", "language": "markdown"},
      "source": [
        "## 7. Descriptive Statistics",
        "Calculate mean, median, standard deviation, and other relevant metrics for Brazilian e-commerce data."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {"id": "#VSC-0212d58e", "language": "python"},
      "source": [
        "# Garantir que as datas estejam no formato datetime",
        "orders_br['order_delivered_customer_date'] = pd.to_datetime(orders_br['order_delivered_customer_date'])",
        "orders_br['order_purchase_timestamp'] = pd.to_datetime(orders_br['order_purchase_timestamp'])",
        "",
        "# Descriptive statistics for order delivery times",
        "delivery_times = (orders_br['order_delivered_customer_date'] - orders_br['order_purchase_timestamp']).dt.days",
        "print('Mean delivery time (days):', delivery_times.mean())",
        "print('Median delivery time (days):', delivery_times.median())",
        "print('Standard deviation (days):', delivery_times.std())"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {"id": "#VSC-6aa4ee68", "language": "python"},
      "source": [
        "# Visualização: Histograma dos tempos de entrega",
        "fig, ax = plt.subplots()",
        "sns.histplot(delivery_times, bins=30, kde=True, color='mediumseagreen', ax=ax)",
        "plt.title('Distribuição dos Tempos de Entrega (dias) - Brasil')",
        "plt.xlabel('Tempo de entrega (dias)')",
        "plt.ylabel('Quantidade de pedidos')",
        "plt.tight_layout()",
        "plt.show()",
        "fig.savefig('../results_png/delivery_times_br.png', dpi=300)"
      ]
    }
  ]
}
